name: force-revert-last-commit

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Branch whose last commit should be force-reverted (e.g., dev)"
        required: true

jobs:
  force-revert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Normalize branch name
        id: normalize
        run: |
          BRANCH_NAME=$(echo "${{ github.event.inputs.branch_name }}" | sed 's#^remotes/origin/##')
          echo "normalized_branch=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Switch to target branch
        run: |
          BRANCH="${{ steps.normalize.outputs.normalized_branch }}"
          git fetch origin "$BRANCH"
          git checkout "$BRANCH"
          git pull origin "$BRANCH"

      - name: Get last commit SHA
        id: last_commit
        run: |
          LAST_COMMIT=$(git rev-parse HEAD)
          echo "commit_sha=$LAST_COMMIT" >> $GITHUB_OUTPUT
          echo "Last commit: $LAST_COMMIT"

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Force revert last commit
        id: revert
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          COMMIT="${{ steps.last_commit.outputs.commit_sha }}"
          SHORT_HASH=$(echo "$COMMIT" | cut -c1-7)
          TIMESTAMP=$(date +%s)
          BRANCH="${{ steps.normalize.outputs.normalized_branch }}"
          REVERT_BRANCH="force-revert/$BRANCH/$SHORT_HASH-$TIMESTAMP"

          echo "Attempting to force revert $COMMIT from $BRANCH..."

          set +e
          git revert "$COMMIT" --no-commit
          STATUS=$?
          set -e

          if [ $STATUS -ne 0 ]; then
            echo "Conflict detected during revert"
            git checkout -b "$REVERT_BRANCH"
            git add .
            git commit -m "Force revert $COMMIT from $BRANCH (conflict resolution needed)"
            git push origin "$REVERT_BRANCH"

            gh pr create \
              --base "$BRANCH" \
              --head "$REVERT_BRANCH" \
              --title "Force revert $COMMIT from $BRANCH" \
              --body "Automatic PR: Manual conflict resolution may be required." || {
                echo "PR creation failed."
                exit 1
              }

            echo "conflict=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # If no conflict, commit and push directly
          git commit -m "Force revert $COMMIT from $BRANCH"
          git push origin "$BRANCH"
          echo "conflict=false" >> $GITHUB_OUTPUT
